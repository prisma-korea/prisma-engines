window.SIDEBAR_ITEMS = {"enum":[["IndexAlgorithm","A type of index as defined by the `type: ...` argument on an index attribute."],["IndexType","The different types of indexes supported in the Prisma Schema Language."],["OperatorClass","Defines operators captured by the index. Used with PostgreSQL GiST/SP-GiST/GIN/BRIN indices."],["ReferentialAction","An action describing the way referential integrity is managed in the system."],["ScalarFieldType","The type of a scalar field, parsed and categorized."],["ScalarType","Prismaâ€™s builtin scalar types."],["SortOrder","The sort order of an index."]],"fn":[["coerce_array","Coerce an expression to an array. The coercion function is used to coerce the array elements."],["is_reserved_type_name","Is this a valid type name for the Prisma client API?"]],"mod":[["ast","The AST data structure. It aims to faithfully represent the syntax of a Prisma Schema, with source span information."],["coerce","Coerce expressions to a specific type, emitting a validation error if the coercion fails. See the `coerce_opt` module if you do not want to emit validation errors."],["coerce_opt","Fallible coercions of PSL expressions to more specific types."],["walkers","Convenient access to a datamodel as understood by ParserDatabase."]],"struct":[["IndexFieldPath","Defines a path to a field that is not directly in the model."],["ManyToManyRelationId","Identifier for a single implicit many-to-many relation in a Prisma schema."],["ParserDatabase","ParserDatabase is a container for a Schema AST, together with information gathered during schema validation. Each validation step enriches the database with information that can be used to work with the schema, without changing the AST. Instantiating with `ParserDatabase::new()` will perform a number of validations and make sure the schema makes sense, but it cannot fail. In case the schema is invalid, diagnostics will be created and the resolved information will be incomplete."],["RelationFieldId","An opaque identifier for a model relation field in a schema."],["RelationId","Identifier for a single relation in a Prisma schema."],["ScalarFieldId","An opaque identifier for a model scalar field in a schema."],["SourceFile","A Prisma schema document."]]};